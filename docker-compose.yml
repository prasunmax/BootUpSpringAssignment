# Use root/example as user/password credentials
version: '3.1'
volumes:
    dbdata:

services:
  redis:
    image: redis
    ports:
      - 8001:6379
    volumes:
      - /redis/data:/data
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./Mongo/sampledata.archive.gz:/tmp/sampledata.archive.gz
      #- ./Mongo/data:/data/db
      - dbdata:/data/db
    #command: bash -c "mongorestore --username root --password example --gzip --archive=/tmp/sampledata.archive.gz"      
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      RABBITMQ_ERLANG_COOKIE: secret_cookie
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - 9000:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  registry:
    image: prasunmax/registry
    ports:
      - 8002:8000
  config-server:
    image: prasunmax/config-server
    ports:
      - 8000:8000
  gateway:
    image: prasunmax/gateway
    depends_on:
      - config-server
    ports:
      - 8003:8000
#  admin:
#    tty: true
#    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
#      context: ./admin 
#      dockerfile: Dockerfile.dev     
#    ports:
#      - 8004:8000
#    volumes:
#      - ./admin/src:/app/src
  product-catalog:
    #image: prasunmax/product-catalog:v1
    tty: true
    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
      context: ./product-catalog 
      dockerfile: Dockerfile.dev
    volumes:
      - ./product-catalog/src:/app/src  
    depends_on:
      - mongo
#      - admin
      - registry
#      - rabbitmq
      - gateway
  price:
    image: prasunmax/price
    # tty: true
    # build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
    #   context: ./price 
    #   dockerfile: Dockerfile.dev
    # volumes:
    #   - ./price/src:/app/src  
    depends_on:
      - mongo
#      - admin
      - registry
      - gateway
    ports:
      - 7001:8000
  cart:
    image: prasunmax/cart
    depends_on:
      - mongo
#      - admin
      - registry
#      - rabbitmq
      - gateway
    ports:
      - 7002:8000
  order:
    #image: prasunmax/order
    tty: true
    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
      context: ./order 
      dockerfile: Dockerfile.dev
    volumes:
      - ./order/src:/app/src  
    environment:
      JPDA_ADDRESS: "*.8001"
      JPDA_TRANSPORT: dt_socket
      #JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,address=8001,server=y,suspend=n"
    ports:
      - 7003:8000
      - 7004:8001
  front-end:
    tty: true
    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
      context: ./front-end 
      dockerfile: Dockerfile.dev     
    depends_on:
#      - admin
      - registry
      - gateway
    ports:
      - 3000:3000
    volumes:
      - ./front-end:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
#  rabbitmq:
#    image: rabbitmq:3-management-alpine
#    container_name: rabbitmq
#    volumes:
#        - ./rabbitmq/etc/:/etc/rabbitmq/
#        - ./rabbitmq/logs/:/var/log/rabbitmq/
#    ports:
#        - 5672:5672
#        - 5671:5671
#        - 25672:25672
#        - 4369:4369
#        - 15671:15671
#        - 15672:15672